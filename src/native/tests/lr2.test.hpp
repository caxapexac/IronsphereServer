#ifndef LOGIC_LR2_TEST_HPP
#define LOGIC

#include "../base/includes.hpp"

namespace unit_testing {
    void test_lr2() {
        /// Разработать и реализовать набор классов:
        /// - Класс базы
        /// - Набор классов ландшафта карты
        /// - Набор классов нейтральных объектов поля
        /// Класс базы должен отвечать за создание юнитов, а также учитывать юнитов, относящихся к текущей базе.
        /// - Основные требования к классу база:
        /// - База должна размещаться на поле
        /// - Методы для создания юнитов
        /// - Учет юнитов, и реакция на их уничтожение и создание
        /// - База должна обладать характеристиками такими, как здоровье, максимальное количество юнитов,
        ///   которые могут быть одновременно созданы на базе, и.т.д.
        /// Набор классов ландшафта определяют вид поля. Основные требования к классам ландшафта:
        /// - Должно быть создано минимум 3 типа ландшафта
        /// - Все классы ландшафта должны иметь как минимум один интерфейс
        /// - Ландшафт должен влиять на юнитов (например, возможно пройти по клетке с определенным ландшафтом
        ///   или запрет для атаки определенного типа юнитов)
        /// - На каждой клетке поля должен быть определенный тип ландшафта
        /// Набор классов нейтральных объектов представляют объекты, располагаемые на поле и с которыми могут взаимодействие юнитов. Основные требования к классам нейтральных объектов поля:
        /// - Создано не менее 4 типов нейтральных объектов
        /// - Взаимодействие юнитов с нейтральными объектами, должно быть реализовано в виде перегрузки операций
        /// - Классы нейтральных объектов должны иметь как минимум один общий интерфейс
        /// Баллы
        /// ~ Выполнены основные требования к классу база 2 балла
        /// ~ Выполнены основные требования к набору классов ландшафта 2 балла
        /// ~ Выполнены основные требования к набору классов нейтр. объектов 2 балла
        /// ~ Добавлено взаимодействие юнитов 1 балла
        /// ~ Имеется 3+ демонстрационных примера 1 балл
        /// ~ Взаимодействие через перегрузку операторов 2 балла
        /// ~ *Для хранения информации о юнитах в классе базы используется паттерн “Компоновщик” 2 балла
        /// ~ *Для наблюдения над юнитами в классе база используется паттерн “Наблюдатель” 2 балла
        /// ~ *Для взаимодействия ландшафта с юнитам используется паттерн “Прокси” 3 балла
        /// ~ *Для взаимодействия одного типа нейтрального объекта с разными типами юнитов используется паттерн “Стратегия” 3 балла
    }
}

#endif //LOGIC_LR2_TEST_HPP
